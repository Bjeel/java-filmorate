DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS ratings CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS friends CASCADE;

CREATE TABLE IF NOT EXISTS "films"
(
    "id"           integer GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
    "name"         varchar(255),
    "description"  varchar(1000),
    "release_date" date,
    "duration"     integer,
    "rating_id"    integer
);

CREATE TABLE IF NOT EXISTS "genres"
(
    "id"   integer GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
    "name" varchar(100) UNIQUE
);

CREATE TABLE IF NOT EXISTS "ratings"
(
    "id"   integer GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
    "name" varchar(5)
);

CREATE TABLE IF NOT EXISTS "users"
(
    "id"      integer GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
    "email"   varchar(255) UNIQUE,
    "login"   varchar(50) UNIQUE,
    "name"    varchar(255),
    "birthday" date
);

CREATE TABLE IF NOT EXISTS "film_genres"
(
    "film_id"  integer,
    "genre_id" integer
);

CREATE TABLE IF NOT EXISTS "likes"
(
    "film_id" integer,
    "user_id" integer,
    CONSTRAINT likes_con PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS "friends"
(
    "target_user_id" integer,
    "friend_id"      integer,
    "is_friends"     boolean
);


ALTER TABLE "films" ADD FOREIGN KEY ("rating_id") REFERENCES "ratings" ("id");

ALTER TABLE "film_genres" ADD FOREIGN KEY ("film_id") REFERENCES "films" ("id");

ALTER TABLE "film_genres" ADD FOREIGN KEY ("genre_id") REFERENCES "genres" ("id");

ALTER TABLE "likes" ADD FOREIGN KEY ("film_id") REFERENCES "films" ("id");

ALTER TABLE "likes" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "friends" ADD FOREIGN KEY ("friend_id") REFERENCES "users" ("id");

ALTER TABLE "friends" ADD FOREIGN KEY ("target_user_id") REFERENCES "users" ("id");
